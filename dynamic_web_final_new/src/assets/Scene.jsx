/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ../../public/scene.gltf 
Author: Subin (https://sketchfab.com/subink)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/subway-car-r62a-eeccd33aab144e76937c1ebdbc1faa74
Title: Subway Car (R62A)
*/

import React, { useLayoutEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import gsap from 'gsap';
import { ScrollTrigger } from 'gsap/ScrollTrigger';
import { useThree } from "@react-three/fiber";

export default function Model(props) {
  const group = useRef()

  const { nodes, materials } = useGLTF('/scene.gltf')

  let camera = useThree(state => state.camera);
  let scene = useThree(state => state.scene);

  useLayoutEffect(() => {

  let t1 = gsap.timeline({
    scrollTrigger: {
      trigger: '.metrics-container',
      start: 'top 70%',
      end: "bottom+=500 bottom",
      scrub: true, // Adjust as needed
      reverse: true, // 
    },

  })

  t1.fromTo(camera.position, {y:2}, {y:0})
  t1.to(camera, { fov: 100, duration: 2 }) // Zoom in
  .to(camera.position, { y: 0, x: 5, z: 5, duration: 2 }) // Move and rotate towards the train
  .to(scene.rotation, { y: 1.5, duration: 2 }) // Rotate towards the train
  .to(camera.position, { y: 0, x: -5, z: -5, duration: 2 }); // Move and rotate towards the train
// Spin the train around and move it to the right side of the page

 }, [])

  return (
    <group {...props} dispose={null}>
      <group position={[0, 0, 238.4]} rotation={[-Math.PI / 2, 0, 0]} scale={381.445}>
        <group position={[-5.653, -0.083, -0.764]} rotation={[0, 0, Math.PI / 2]} scale={[0.262, 0.012, 0.262]}>
          <mesh geometry={nodes.Door1_Subway_Roof_0.geometry} material={materials.Subway_Roof} />
          <mesh geometry={nodes.Door1_SubwayBody_Refl_0.geometry} material={materials.SubwayBody_Refl} />
          <mesh geometry={nodes.Door1_Glass_0.geometry} material={materials.Glass} />
        </group>
        <group position={[5.716, -0.083, -0.764]} rotation={[0, 0, Math.PI / 2]} scale={[0.262, 0.012, 0.262]}>
          <mesh geometry={nodes.Door2_Subway_Roof_0.geometry} material={materials.Subway_Roof} />
          <mesh geometry={nodes.Door2_Metal_refl_0.geometry} material={materials.Metal_refl} />
          <mesh geometry={nodes.Door2_Glass_0.geometry} material={materials.Glass} />
        </group>
        <mesh geometry={nodes.SubwayCar_Rubber_0.geometry} material={materials.Rubber} />
        <mesh geometry={nodes.SubwayCar_SubwayBody_Rough_0.geometry} material={materials.SubwayBody_Rough} />
        <mesh geometry={nodes.SubwayCar_Subway_Roof_0.geometry} material={materials.Subway_Roof} />
        <mesh geometry={nodes.SubwayCar_Carbon_0.geometry} material={materials.Carbon} />
        <mesh geometry={nodes.SubwayCar_SubwayBody_Refl_0.geometry} material={materials.SubwayBody_Refl} />
        <mesh geometry={nodes.SubwayCar_Glass_0.geometry} material={materials.Glass} />
        <mesh geometry={nodes.SubwayCar_metal_rough_0.geometry} material={materials.metal_rough} />
        <mesh geometry={nodes.SubwayCar_poster1_0.geometry} material={materials.poster1} />
        <mesh geometry={nodes.SubwayCar_Ceiling_0.geometry} material={materials.Ceiling} />
        <mesh geometry={nodes.SubwayCar_Plastic_0.geometry} material={materials.Plastic} />
        <mesh geometry={nodes.SubwayCar_Light_0.geometry} material={materials.Light} />
        <mesh geometry={nodes.SubwayCar_LongPosters_0.geometry} material={materials.LongPosters} />
        <mesh geometry={nodes.SubwayCar_map_0.geometry} material={materials.material} />
        <mesh geometry={nodes.SubwayCar_poster2_0.geometry} material={materials.poster2} />
        <mesh geometry={nodes.SubwayCar_FrostedGlass_0.geometry} material={materials.FrostedGlass} />
        <mesh geometry={nodes.SubwayCar_Seats_0.geometry} material={materials.Seats} />
        <mesh geometry={nodes.SubwayCar_Seatscolor_0.geometry} material={materials['Seats.color']} />
        <mesh geometry={nodes.SubwayCar_Yellow_0.geometry} material={materials.Yellow} />
        <mesh geometry={nodes.SubwayCar_RedLgt_0.geometry} material={materials.RedLgt} />
        <mesh geometry={nodes.SubwayCar_WhiteLgt_0.geometry} material={materials.WhiteLgt} />
        <mesh geometry={nodes.SubwayCar_DarkMetal_0.geometry} material={materials.DarkMetal} />
        <mesh geometry={nodes.SubwayCar_GreyBox_0.geometry} material={materials.GreyBox} />
        <mesh geometry={nodes.SubwayCar_Undercarriage_0.geometry} material={materials.Undercarriage} />
        <mesh geometry={nodes.SubwayCar_Wheel_0.geometry} material={materials.Wheel} />
      </group>
    </group>
  )
}

useGLTF.preload('/scene.gltf')
